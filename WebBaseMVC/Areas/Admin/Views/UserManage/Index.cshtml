@{
    ViewBag.Title = "UserManage";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    .modal .modal-dialog {
        width: 70%;
    }
</style>
<div ng-controller="MainPageCtrl">
    <table>
        <tr>
            <td>
                <input type="button" ng-click="newRow()" value="Add Rights">
                <div ui-grid="ngGridUser" ui-grid-pagination class="gird" style="width:800px">
            </td>
        </tr>
    </table>
</div>
<script>
    NgJs.using("Core.Control.Grid")
    .using("Core.Util.Tool")
    .using("Core.Control.Window")
    .using("Core.Net.Service");

    var NgGrid = NgJs.Core.Util.Tool.getObjectByPath(NgJs, "Core.Control.Grid");

    app = angular.module('ngMasterAg', ['ngAnimate', 'ui.bootstrap', 'toastr', 'chieffancypants.loadingBar', 'ngTouch', 'ui.grid', 'ui.grid.pagination', 'ui.grid.selection']);
    app.controller('MainPageCtrl', function ($scope, $modal, $timeout, $http, toastr, toastrConfig, cfpLoadingBar, uiGridConstants) {
        var myCtrlArg = arguments;
        var optionsGrid = {
            gridId: "ngGridUser",
            myCtrlArg: myCtrlArg,
            columnDefs: [
                  {
                      name: 'h1',
                      displayName: '',
                      cellTemplate: '@Url.Content("~/Pub/libAngular/templateControl/Form/editButton.html")',
                      width: 60
                  },
                  { name: 'user_id', headerCellTemplate: "<n-lang>USER_ID</n-lang>" },
                  { name: 'email', headerCellTemplate: "<n-lang>EMAIL</n-lang>" },
                  { name: 'user_desc', headerCellTemplate: "<n-lang>USER_DESC</n-lang>" },
                  { name: 'disabled_mk', headerCellTemplate: "<n-lang>STOP_MK</n-lang>" },
                  { name: 'last_login', headerCellTemplate: "<n-lang>LAST_LOGIN</n-lang>" },
            ]
        }

        NgJs.Core.Control.Grid.bind("WebBaseMVC.API.Admin.User.UserManage.GetListUserAll", null, optionsGrid);

        //Edit Event
        $scope.editRow = function (grid, row) {
            NgJs.Core.Control.Window.open('@Url.Content("~/Pub/libAngular/templateControl/Form/editorWindowModal.html")', {
                myCtrlArg: myCtrlArg
                , callModalCtrl: fnEditModalInstanceCtrl
                , myGrid: grid
                , myGridRow: row
            });
        }

        //New Event
        $scope.newRow = function () {
            NgJs.Core.Control.Window.open('@Url.Content("~/Pub/libAngular/templateControl/Form/editorWindowModal.html")', {
                myCtrlArg: myCtrlArg
                , callModalCtrl: fnAddModalInstanceCtrl
            });
        }

        //Delete Event
        $scope.deleteRow = function (grid, row) {
            NgJs.Core.Control.Window.open('@Url.Content("~/Pub/libAngular/templateControl/Form/deleteModal.html")', {
                myCtrlArg: myCtrlArg
                , callModalCtrl: fnDeleteModalInstanceCtrl
                , myGrid: grid
                , myGridRow: row
            });
        }

        var fnEditModalInstanceCtrl = function ($http, $modalInstance, grid, row) {
            $scope.entity = angular.copy(row.entity);
            $scope.ok = function (answer, entity) {
                entity.end_mk = "N";
                if (entity.disabled_mk && entity.disabled_mk == true)
                    entity.end_mk = "Y";
                delete entity.disabled_mk;
                NgJs.Core.Net.Service.call("WebBaseMVC.API.Admin.User.UserManage.UpdateUser", [entity], {
                    myCtrlArg: myCtrlArg
                }).then(function (data) {
                    NgGrid.bind("WebBaseMVC.API.Admin.User.UserManage.GetListUserAll", null, optionsGrid);
                    $modalInstance.close();
                });
            };
        };

        var fnAddModalInstanceCtrl = function ($http, $modalInstance, grid, row) {
            $scope.entity = angular.copy(row.entity);
            $scope.ok = function (answer, entity) {
                NgJs.Core.Net.Service.call("WebBaseMVC.API.Admin.User.UserManage.AddUsers", [entity], {
                    myCtrlArg: myCtrlArg
                }).then(function (data) {
                    NgJs.Core.grid("WebBaseMVC.API.Admin.User.UserManage.GetListUserAll", null, optionsGrid);
                    $modalInstance.close();
                });
            };
        }

        $scope.cancel = function () {
            $modalInstance.dismiss('cancel');
        };

        var fnDeleteModalInstanceCtrl = function ($http, $modalInstance, grid, row) {
            $scope.entity = angular.copy(row.entity);
            $scope.ok = function (answer, entity) {
                NgJs.Core.Service.call({
                    url: "WebBaseMVC.API.Admin.User.UserManage.DeleteUsers",
                    params: [entity],
                    myCtrlArg: myCtrlArg
                }).then(function (data) {
                    NgJs.Core.grid("WebBaseMVC.API.Admin.User.UserManage.GetListUserAll", null, optionsGrid);
                    $modalInstance.close();
                });                
            };            
        };

    });


    app.directive('myBodydialog', function () {
        return {
            restrict: 'A',
            templateUrl: '@Url.Content("~/Pub/libAngular/templateControl/Custom/UserManage/editUsersModal.html")'

        }
    });

    /*app.directive('myDragabledialog', function () {
       return {
           restrict: 'A',
           link: function (scope, elem, attr) {
               $(elem.parent()).draggable();
           }
       }
   });*/

    /*debugger
    var response = $http({
        method: "post",
        url: "SaveUserInfo",
        data: JSON.stringify(entity),
        dataType: "json"
    }).then(function (data) {
        debugger

    });*/

</script>
